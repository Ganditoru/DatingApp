{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { deselectMember, loadMembers, loadMembersError, loadMembersSuccess, selectMember } from \"./member.actions\";\nexport const initialState = {\n  selectedMember: null,\n  members: [],\n  error: null,\n  status: \"pending\"\n};\nexport const memberReducer = createReducer(initialState, on(selectMember, (state, {\n  member\n}) => Object.assign(Object.assign({}, state), {\n  selectedMember: member\n})), on(deselectMember, state => Object.assign(Object.assign({}, state), {\n  selectedMember: null\n})), on(loadMembers, state => {\n  console.log(\"LoadMember - Reducer\");\n  return Object.assign(Object.assign({}, state), {\n    status: 'loading'\n  });\n}), on(loadMembersSuccess, (state, {\n  members\n}) => {\n  console.log(\"LoadMember Success\");\n  window.alert(\"Load Member\");\n  return Object.assign(Object.assign({}, state), {\n    members: members,\n    selectedMember: null,\n    status: \"success\"\n  });\n}), on(loadMembersError, (state, {\n  error\n}) => {\n  console.log(\"LoadMember Error\");\n  return Object.assign(Object.assign({}, state), {\n    members: [],\n    selectedMember: null,\n    error: error,\n    status: 'error'\n  });\n}));","map":null,"metadata":{},"sourceType":"module"}