{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadLogin, loadLoginError, loadLoginSuccess, login, logout } from \"./login.actions\";\nexport const initialState = {\n  username: \"\",\n  token: \"\",\n  error: null,\n  status: \"pending\"\n};\nexport const loginReducer = createReducer(initialState, on(login, (state, {\n  user\n}) => Object.assign(Object.assign({}, state), {\n  username: user.username,\n  token: user.token\n})), on(logout, state => ({\n  username: \"\",\n  token: \"\",\n  error: null,\n  status: \"pending\"\n})), on(loadLogin, state => Object.assign(Object.assign({}, state), {\n  status: 'loading'\n})), on(loadLoginSuccess, (state, {\n  user\n}) => Object.assign(Object.assign({}, state), {\n  username: user.username,\n  token: user.token,\n  status: \"success\"\n})), on(loadLoginError, (state, {\n  error\n}) => Object.assign(Object.assign({}, state), {\n  error: error,\n  status: 'error'\n})));\nexport function loginReducerFun(state, action) {\n  return loginReducer(state, action);\n}","map":null,"metadata":{},"sourceType":"module"}